/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
     vector<int>ans;

    if(root==NULL)return ans;

    queue<pair<BinaryTreeNode<int> *,int>>q;

    q.push({root,0});

    map<int,int>mp;

    while(!q.empty()){

        auto p = q.front();

        q.pop();

        mp[p.second] = p.first->data;

        if(p.first->left!=NULL)q.push({p.first->left,p.second-1});

        if(p.first->right!=NULL)q.push({p.first->right,p.second+1});

    }

    for(auto p : mp){

        ans.push_back(p.second);

    }

    return ans;
    
}
